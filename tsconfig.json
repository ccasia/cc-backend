{
  "compilerOptions": {
    "lib": ["ES6", "dom"], // Specify a list of libraries the project will use
    "target": "ES6", // Set the JavaScript version for output files
    "module": "NodeNext", // Set the module system (Node.js uses CommonJS)
    "strict": false, // Enable all strict type-checking options
    "baseUrl": ".", // Base directory to resolve non-relative module names
    "outDir": "./dist", // Redirect output structure to the 'dist' folder
    "rootDir": "./src", // Specify the root directory of source files
    "paths": {
      "@controllers/*": ["./src/controller/*"],
      "@routes/*": ["./src/routes/*"],
      "@constants/*": ["./src/constants/*"],
      "@configs/*": ["./src/config/*"],
      "@middlewares/*": ["./src/middleware/*"],
      "@services/*": ["./src/service/*"],
      "@utils/*": ["./src/utils/*"],
      "@helper/*": ["./src/helper/*"],
      "@types": ["./src/types.ts"]
    },
    "skipLibCheck": true, // Skip type checking of all declaration files (*.d.ts)
    "esModuleInterop": true, // Enables compatibility with default imports from modules
    "moduleResolution": "NodeNext", // Choose a module resolution strategy
    "resolveJsonModule": true,
    "removeComments": true,
    "strictNullChecks": true, // Enable strict null checks
    "strictFunctionTypes": true, // Enable strict checking of function types
    "strictPropertyInitialization": true, // Ensure non-undefined class properties are initialized in the constructor
    "strictBindCallApply": true, // Enable stricter checking of the bind, call, and apply methods on functions
    "forceConsistentCasingInFileNames": true, // Disallow inconsistently-cased references to the same file
    "noImplicitAny": true, // Raise error on expressions and declarations with an implied 'any' type
    "noImplicitThis": true, // Raise error on 'this' expressions with an implied 'any' type
    "alwaysStrict": true, // Parse in strict mode and emit "use strict" for each source file
    "noUnusedLocals": false, // Report errors on unused locals
    "noUnusedParameters": false, // Report errors on unused parameters
    "noImplicitReturns": false, // Report error when not all code paths in function return a value
    "noFallthroughCasesInSwitch": true // Report errors for fallthrough cases in switch statement
    // "experimentalDecorators": true,
    // "emitDecoratorMetadata": true,
    // "sourceMap": true,
    // "noEmitHelpers": true,
    // "types": [
    //   "node",
    //   "express"
    // ]
    // "typeRoots": ["./types"]
  },

  "include": [
    "src/**/*" // Include all files in the src directory
  ],
  "exclude": [
    "node_modules", // Exclude the node_modules directory
    "**/*.spec.ts"
    // "**/*.test.ts" // Exclude test files
  ],
  "ts-node": {
    "require": ["tsconfig-paths/register"]
  }
}
